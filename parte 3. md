##Un fotodiodo en Arduino es un componente que se utiliza para detectar la intensidad de la luz incidente en su superficie.Su funcionamiento se basa en la conversión de la luz en una corriente eléctrica.

# link arduino: https://www.tinkercad.com/things/82FKLyJgfjU?sharecode=Z2iJqT0r427ew44sGwhccNLxbPl7IpvPKnXs0zxRiN4
# link gdb : https://onlinegdb.com/BFLKM8Vre



# codigo:
// ACLARACION se borro el sensor de temperatura para poder usar el fotodiodo


////////////////////////////////////////////////////////

//Explicación del código:

//Se definen los pines para los segmentos del display y los botones
# define A 12
# define B 13
# define C 7
# define D 8
# define E 9
# define F 11
# define G 10

//Se definen los leds
# define LED_1 6
# define LED_2 2
# define TEMPERATURA A0
# define fotodiodo A1

//Luego definimos las constantes para los segmentos y botones
//(incluyendo el tiempo de visualización de cada número)
# define SUBE 4
# define BAJA 3
# define SWITCH 5
# define UNIDAD A4
# define DECENA A5
# define APAGADOS 0
# define TIMEDISPLAYON 10

//Aqui se declaran las variables que se van a usar:
//countdigit: almacena el número que se muestra en el display.
//sube, baja y reset:  leer el estado de los botones.
int countdigit = 0;
int sube = 1;
int subprevia = 1;
int baja = 1;
int bajaprevia = 1;
int reset = 1;
int resetprevia = 1;
int interruptor = 1;
int switch_previa = 1;
bool flagMostrar = true;
int leerTemperatura = 0;
int lecturafotodiodo;
//En la función setup, se configuran los pines de entrada y salida.
// Luego se inicializan los digitos UNIDAD y DECENA como apagados,y se
//muestra el número "0" en la pantalla al comienzo.
void setup()
{
    pinMode(fotodiodo,INPUT_PULLUP);
    pinMode(3, INPUT_PULLUP);
    pinMode(4, INPUT_PULLUP);
  	pinMode(5, OUTPUT);
    pinMode(6, OUTPUT);
    pinMode(7, OUTPUT);
    pinMode(8, OUTPUT);
    pinMode(9, OUTPUT);
    pinMode(10, OUTPUT);
    pinMode(11, OUTPUT);
    pinMode(12, OUTPUT);
    pinMode(13, OUTPUT);
    pinMode(LED_1, OUTPUT);
    pinMode(LED_2, OUTPUT);
    pinMode(UNIDAD, OUTPUT);
    pinMode(DECENA, OUTPUT);
    digitalWrite(UNIDAD,0);
    digitalWrite(DECENA,0);
    printDigit(0);

    Serial.begin(9600);
}

//En la función loop, se lee si se presionó uno de los botones:
void loop()
{
    int pressed = keypress();// revisa si se presiono una tecla y tambien que no estaba presionada desde antes
    interruptor = digitalRead(SWITCH);
    //leerTemperatura = analogRead(TEMPERATURA);
    //leerTemperatura = map(leerTemperatura, 20, 358,-40, 125);
	//calcularTemperatura(leerTemperatura);
    lecturafotodiodo = analogRead(fotodiodo);
    
  	calcularfotodiodo(lecturafotodiodo);

    if (pressed == SUBE && interruptor == 1)
    {
      if(switch_previa == 0)
      {
      	switch_previa = 1;
        countdigit = 0;
      }
      
        flagMostrar = true;
 
        countdigit++;
        
        if (countdigit > 99)
        {
            countdigit = 0;
        }
    }
    else if( pressed == BAJA && interruptor == 1)
    {
      if(switch_previa == 0){
      	switch_previa = 1;
        countdigit = 0;
      }
        flagMostrar = true;
        
        countdigit--;
        if (countdigit < 0)
        {
            countdigit = 99;
        }
        switch_previa = 1;
    }

    if(pressed == SUBE && interruptor == 0)
    {
        if(switch_previa == 1)
        {
            switch_previa = 0;
            countdigit = 0;
            flagMostrar = false;
        }

        if(switch_previa == 0)
        {
            countdigit++;
        }

        if(esPrimo(countdigit) == 1)
        {
            flagMostrar = true;
            Serial.println("\nEs primo");
        }
        else
        {
            Serial.println("\nNo es primo");
            flagMostrar = false;
        }
    }
    else if(pressed == BAJA && interruptor == 0)
    {
        if(switch_previa == 1)
        {
            switch_previa = 0;
            countdigit = 0;
            flagMostrar = false;
        }

        if(switch_previa == 0)
        {
            countdigit--;
        }

        if(esPrimo(countdigit) == 1)
        {
            flagMostrar = true;
          
        }
        else
        {
            
            flagMostrar = false;
        }
    }

    if(flagMostrar)
    {
        printCount(countdigit);
        delay(TIMEDISPLAYON);
    }
    else
    {
        apagar();
        delay(TIMEDISPLAYON);
    }
}

//Usando la función keypress: si se presiona SUBE, se incrementa
//el número countdigit, si se presiona BAJA, se disminuye,
//y si se presiona RESET, se reinicia a 0.
int keypress(void)
{

    sube = digitalRead(SUBE);// lee el estado de la variable y si no lo presiono devuelve uno
    baja = digitalRead(BAJA);// si presiono me devuelve 0

    if(sube == 1)  // no presione sube
    {
        subprevia = 1; // entonces antes tampoco estaba presionada
    }
    if(baja == 1)
    {
        bajaprevia = 1;
    }

    if(sube == 0 && sube != subprevia)
    {
        subprevia = sube;// hago que el estado anterior tenga el mismo valor
        return SUBE;

    }

    if(baja == 0 && baja != bajaprevia)
    {
        bajaprevia = baja;
        return BAJA;

    }
    return 0; // si no presione nada o una que ya estaba presionada
}
//Luego se muestra el número actual en la pantalla usando
//la función printCounty, introduciendose un delay antes de mostrar el número siguiente.
void printCount(int count)
{
    prendeDigito(APAGADOS); // apago los dos
    printDigit(count/10);
    prendeDigito(DECENA);
    prendeDigito(APAGADOS);
    printDigit(count - 10*((int)count/10));
    prendeDigito(UNIDAD);


}

//La función prendeDigito enciende uno de los dígitos
//del display (UNIDAD o DECENA) y apaga el otro
void prendeDigito(int digito)
{

    if (digito == UNIDAD)
    {
        digitalWrite(UNIDAD,LOW); // pongo el unidad en 0(enciende)
        digitalWrite(DECENA,HIGH);// pongo el comun en 1(no enciende)
        delay(TIMEDISPLAYON);

    }
    else if (digito == DECENA)
    {

        digitalWrite(DECENA,LOW);
        digitalWrite(UNIDAD,HIGH);
        delay(TIMEDISPLAYON);
    }
    else
    {
        digitalWrite(DECENA,HIGH); // no prende ninguno de los dos
        digitalWrite(UNIDAD,HIGH);
    }

}

//En la funcion printDigit se definen los patrones de
//segmentos para cada dígito del 0 al 9 y se encienden  los
// segmentos del display según el dígito que se quiera mostrar.

void printDigit(int digit)
{
    apagar();
    switch(digit)
    {

    case 0:
        digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
        digitalWrite(E, HIGH);
        digitalWrite(F, HIGH);

        break;
    case 1:
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        break;

    case 2:
        digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(D, HIGH);
        digitalWrite(E, HIGH);
        digitalWrite(G, HIGH);
        break;
        break;

    case 3:
        digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
        digitalWrite(G, HIGH);
        break;

    case 4:
        digitalWrite(B,HIGH);
        digitalWrite(C,HIGH);
        digitalWrite(F,HIGH);
        digitalWrite(G,HIGH);
        break;

    case 5:
        digitalWrite(A, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
        digitalWrite(F, HIGH);
        digitalWrite(G, HIGH);
        break;

    case 6:
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
        digitalWrite(E, HIGH);
        digitalWrite(F, HIGH);
        digitalWrite(G, HIGH);
        break;

    case 7:
        digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        break;

    case 8:
        digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
        digitalWrite(E, HIGH);
        digitalWrite(F, HIGH);
        digitalWrite(G, HIGH);
        break;

    case 9:
        digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);

        digitalWrite(F, HIGH);
        digitalWrite(G, HIGH);
        break;


        break;
    }
}
//La función apagarse utiliza para apagar todos los segmentos
//antes de mostrar un nuevo dígito en la pantalla
void apagar()
{

    digitalWrite(A,LOW);
    digitalWrite(B,LOW);
    digitalWrite(C,LOW);
    digitalWrite(D,LOW);
    digitalWrite(E,LOW);
    digitalWrite(F,LOW);
    digitalWrite(G,LOW);

}

int esPrimo(int numero)
{
    int retorno = 1;
    /*
    El número 4 es un caso especial, pues al dividirlo entre
    2 el resultado es 2, y el ciclo nunca se cumple, indicando que
    el 4 SÍ es primo, pero realmente NO lo es, así que si el número es 4
    inmediatamente indicamos que no es primo (regresando 0)
    Nota: solo es para el 4, los demás funcionan bien
    */
    if (numero == 0 || numero == 1 || numero == 4)
    {
        retorno = 0;
    }

    for (int x = 2; x < numero / 2; x++)
    {
        // Si es divisible por cualquiera de estos números, no
        // es primo
        if (numero % x == 0)
        {
            retorno = 0;
        }
    }
    // Si no se pudo dividir por ninguno de los de arriba, sí es primo
    return retorno;
}

void calcularTemperatura(int temperaturaLeida)
{

    if(temperaturaLeida < 20)
    {
        digitalWrite(LED_1,HIGH);
        digitalWrite(LED_2,LOW);
    }
    else 
    {
        digitalWrite(LED_2,HIGH);
        digitalWrite(LED_1,LOW);
    }
}
void calcularfotodiodo(int numero)
{
   Serial.println(numero);
    if(numero  <400)
    {
        digitalWrite(LED_1,HIGH);
        digitalWrite(LED_2,LOW);
    }
    else 
    {
        digitalWrite(LED_2,HIGH);
        digitalWrite(LED_1,LOW);
    }
}

